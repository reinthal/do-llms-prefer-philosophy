name: Continuous Integration
on:
  push:
    branches-ignore:
      - 'main'
    paths:
      - "src/**"

permissions:
  contents: read

jobs:
  check-conventional-commits:
    name: Check Conventional Commits
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Install commitizen
        run: uv sync

      - name: Check conventional commits
        run: uv run cz check --rev-range origin/main..HEAD

  file-changes:
    name: Check for file changes
    runs-on: ubuntu-latest
    needs: check-conventional-commits
    permissions:
      contents: read
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      python: ${{ steps.filter.outputs.python }}
      python_files: ${{ steps.filter.outputs.python_files }}
      sql: ${{ steps.filter.outputs.sql }}
      sql_files: ${{ steps.filter.outputs.sql_files }}
      dbt: ${{ steps.filter.outputs.dbt }}
      dbt_files: ${{ steps.filter.outputs.dbt_files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: shell
          filters: | # Do we need to filter for sql and dbt if there is no action?
            python:
              - added|modified: '**.py'

  python-quality-checks:
    name: Python Quality Checks
    runs-on: ubuntu-latest
    needs: file-changes
    if: ${{ needs.file-changes.outputs.python == 'true' }}
    steps:
      - name: Python files changed
        run: echo "Python files changed ${{ needs.file-changes.outputs.python_files }}"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync --group test

      - name: Lint with Ruff
        run: |
          echo "üîç Linting with ruff..."
          uv run --group test ruff check .

      - name: Check code formatting with Ruff
        run: |
          echo "üé® Checking code formatting with ruff..."
          uv run --group test ruff format --check .

      - name: Run tests with pytest
        run: |
          echo "üß™ Running tests with pytest..."
          uv run --group test pytest

  # Check that image can be built without pushing on success
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: python-quality-checks
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build the docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          tags: test_build
          push: false
